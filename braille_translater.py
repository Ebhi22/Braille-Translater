# -*- coding: utf-8 -*-
"""Braille_Translater.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TTzPvCEU_F6X4yubIGRvpbiywgn_5cTL
"""

import pandas as pd
import numpy as np
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
data = pd.read_csv("https://raw.githubusercontent.com/amankharwal/Website-data/master/dataset.csv")
print(data)

data.isnull().sum()

data["language"].value_counts()

x = np.array(data["Text"])
y = np.array(data["language"])

cv = CountVectorizer()
X = cv.fit_transform(x)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)

X_train.shape, X_test.shape, y_train.shape, y_test.shape

model = MultinomialNB()
model.fit(X_train,y_train)
model.score(X_test,y_test)

user = input("Enter a Text: ")
data = cv.transform([user]).toarray()
output = model.predict(data)
print(output)

%pip install googletrans==3.1.0a0

from googletrans import Translator
translator = Translator()
translation = translator.translate(user,dest="en")
Text = translation.text
print(Text)

braille = ['⠴','⠂','⠆','⠒','⠲','⠢','⠖','⠶','⠦','⠔',
			'⠁','⠃','⠉','⠙','⠑','⠋','⠛','⠓','⠊','⠚',
			'⠅','⠇','⠍','⠝','⠕','⠏','⠟','⠗','⠎','⠞',
			'⠥','⠧','⠺','⠭','⠽','⠵',
			'⠱','⠰','⠣','⠿','⠀','⠮','⠐','⠼','⠫','⠩',
			'⠯','⠄','⠷','⠾','⠡','⠬','⠠','⠤','⠨','⠌',
			'⠜','⠹','⠈','⠪','⠳','⠻','⠘','⠸']

english = ['0','1','2','3','4','5','6','7','8','9',
			'a','b','c','d','e','f','g','h','i','j',
			'k','l','m','n','o','p','q','r','s','t',
			'u','v','w','x','y','z',
			':',';','<','=',' ','!','"','#','$','%',
			'&','','(',')','*','+',',','-','.','/',
			'>','?','@','[','\\',']','^','_']


def braille2English(brailleText) :
	return ''.join([english[braille.index(fi)] for ch in brailleText for fi in braille if ch == fi])
def english2Braiile(englishText) :
	return ''.join([braille[english.index(fi)] for ch in englishText.lower() for fi in english if ch == fi])


brailleText = english2Braiile(Text)

backToEng = braille2English(brailleText)

print(brailleText)
print(backToEng)





import pickle

with open('model.pkl', 'wb') as file:
    pickle.dump(model, file)



